heat_template_version: 2013-05-23

description: |
  This is a Heat template to deploy a single Linux server running Openswan for
  use as a VPN server.

parameter_groups:

- label: Server Settings
  parameters:
  - image
  - flavor

- label: rax-dev-params
  parameters:
  - server_hostname
  - kitchen
  - chef_version

parameters:

  server_hostname:
    label: Server Name
    description: Hostname to use for setting the server name.
    type: string
    default: vpn-server
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  image:
    label: Operating System
    description: |
      Server image used for all servers that are created as a part of this
      deployment
    type: string
    default: Ubuntu 12.04 LTS (Precise Pangolin)
    constraints:
    - allowed_values:
      - Ubuntu 12.04 LTS (Precise Pangolin)
      description: Must be a supported operating system.

  flavor:
    label: Server Size
    description: |
      Rackspace Cloud Server flavor to use. The size is based on the amount of
      RAM for the provisioned server.
    type: string
    default: 4 GB Performance
    constraints:
    - allowed_values:
      - 1 GB Performance
      - 2 GB Performance
      - 4 GB Performance
      - 8 GB Performance
      - 15 GB Performance
      - 30 GB Performance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  kitchen:
    label: Kitchen
    description: URL for the kitchen to use
    type: string
    default: https://github.com/brint/openswan

  chef_version:
    label: Chef Version
    description: Version of chef client to use
    type: string
    default: 11.16.0

resources:

  preshare_key:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  vpn_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  vpn_server:
    type: "Rackspace::Cloud::Server"
    properties:
      name: { get_param: server_hostname }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_resource: ssh_key }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }

  vpn_setup:
    type: "OS::Heat::ChefSolo"
    depends_on: vpn_server
    properties:
      username: root
      private_key: { get_attr: [ssh_key, private_key] }
      host: { get_attr: [vpn_server, accessIPv4] }
      kitchen: { get_param: kitchen }
      chef_version: { get_param: chef_version }
      data_bags:
        users:
          encrypted: true
          id: users
          vpn_user:
            id: "vpn_user"
            groups: ["vpn"]
            username: "vpn_user"
            vpn_password: { get_attr: [vpn_password, value] }
      node:
        openswan:
          preshared_key: { get_attr: [preshare_key, value] }
        rax:
          firewall:
            tcp: [500, 4500, 1701]
        run_list: ["recipe[apt]",
                   "recipe[chef-solo-search]",
                   "recipe[openswan]",
                   "recipe[rax-firewall]"]


outputs:
  private_key:
    description: SSH Private Key
    value: { get_attr: [ssh_key, private_key] }

  server_ip:
    description: Server IP
    value: { get_attr: [vpn_server, accessIPv4] }

  preshare_key:
    description: Preshare Key
    value: { get_attr: [preshare_key, value] }

  vpn_password:
    description: VPN Password
    value: { get_attr: [vpn_password, value] }
